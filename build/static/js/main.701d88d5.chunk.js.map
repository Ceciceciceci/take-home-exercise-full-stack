{"version":3,"sources":["assets/matter_empty_avatar.svg","components/JoinForm/JoinForm.js","components/Modal/Modal.js","components/TeamMember/TeamMember.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","JoinForm","props","_this","Object","classCallCheck","this","_super","call","handleClick","e","node","contains","target","hideColorPicker","validateUrl","url","RegExp","test","handleValidation","formIsValid","errors","state","userData","firstName","match","lastName","title","story","favoriteColor","photoUrl","setState","photoUrlError","handleChange","targetName","name","targetValue","value","prevState","objectSpread2","defineProperty","handleSubmit","bind","assertThisInitialized","showColorPicker","handleChangeComplete","showPicker","document","addEventListener","removeEventListener","hex","preventDefault","dataFinal","axios","post","headers","Content-Type","then","res","console","log","status","window","location","alert","_this2","react_default","a","createElement","className","onSubmit","htmlFor","type","onChange","autoComplete","style","color","rows","cols","ref","readOnly","onClick","placeholder","lib","onChangeComplete","React","PureComponent","Modal","show","handleClose","closeForm","components_JoinForm_JoinForm","TeamMember","hideForm","showJoinForm","showForm","button","modal","components_Modal_Modal","src","alt","backgroundColor","defaultProps","MatterEmptyAvatar","App","team","loading","fetchInitialData","setTimeout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","get","response","data","map","member","components_TeamMember_TeamMember","key","id","concat","Component","Boolean","hostname","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.701d88d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/matter_empty_avatar.8064744b.svg\";","import React from 'react';\nimport './JoinForm.css';\nimport { SwatchesPicker } from 'react-color';\nimport axios from 'axios';\n\nclass JoinForm extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showColorPicker = this.showColorPicker.bind(this);\n        this.hideColorPicker = this.hideColorPicker.bind(this);\n        this.validateUrl = this.validateUrl.bind(this);\n        this.handleChangeComplete =this.handleChangeComplete.bind(this);\n        this.state = {\n            showPicker: false, \n            userData: {\n                firstName:'',\n                lastName: '',\n                title: '',\n                story: '',\n                favoriteColor: '#999999',\n                photoUrl: ''\n            },\n            errors:{}\n        };\n    }\n\n    //COLOR PICKER FUNCTIONS\n    /* For the color picker */ \n    showColorPicker(){\n        this.setState({showPicker: true})\n    }\n    /* For the color picker to disappear when clicked outside of it */\n    componentWillMount(){\n        document.addEventListener('mousedown', this.handleClick, false);\n    }\n    componentWillUnmount(){\n        document.removeEventListener('mousedown', this.handleClick, false);\n    }\n    handleClick = (e) => {\n        if (this.node.contains(e.target)){ //make reference to target inside the div node\n            return;\n        }\n        this.hideColorPicker();\n    }\n    hideColorPicker(){\n        this.setState({showPicker: false})\n    }\n    //The color picker change handler to update the input field when color is chosen\n    handleChangeComplete(e){\n        let hex = e.hex;\n        this.setState((prevState) => {\n            return {\n                userData: {\n                    ...prevState.userData,\n                    favoriteColor: hex\n                }\n            }\n        });\n        this.setState({ showPicker: false });\n    }\n\n    //OTHER\n    validateUrl = (url) => {\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|'+ // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ //port\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n        '(\\\\#[-a-z\\\\d_]*)?$','i'); // ref: https://www.tutorialspoint.com/How-to-validate-URL-address-in-JavaScript\n        return pattern.test(url);\n    }\n    /*validates the form fields */\n    handleValidation = (e) =>{\n        let formIsValid = true;\n        let errors = {};\n\n        //check firstname\n        if (this.state.userData.firstName === \"\" || !this.state.userData.firstName){\n            formIsValid = false;\n            errors[\"firstName\"] = \"Add a first name.\";\n        } else if (!this.state.userData.firstName.match(/^[a-zA-Z]+$/)){\n            formIsValid = false;\n            errors[\"firstName\"] = \"Only letters\";\n        }\n\n        //check last name\n        if (this.state.userData.lastName === \"\" || !this.state.userData.lastName){\n            formIsValid = false;\n            errors[\"lastName\"] = \"Add a last name.\";\n        } else if (!this.state.userData.lastName.match(/^[a-zA-Z]+$/)){\n            formIsValid = false;\n            errors[\"lastName\"] = \"Only letters\";\n        }\n\n        //check title field\n        if (this.state.userData.title === \"\" || !this.state.userData.title){\n            formIsValid = false;\n            errors[\"title\"] = \"Add your job title.\";\n        } \n\n        //check story\n        if (this.state.userData.story === \"\" || !this.state.userData.story){\n            formIsValid = false;\n            errors[\"story\"] = \"Add a short description. Even if it's just one letter.\";\n        }\n        //check color\n        if (this.state.userData.favoriteColor === \"\" || !this.state.userData.favoriteColor){\n            formIsValid = false;\n            errors[\"favoriteColor\"] = \"Choose a color.\";\n        }\n\n        //check url format\n        if (this.state.userData.photoUrl === \"\" || !this.state.userData.photoUrl){\n            formIsValid = false;\n            errors[\"photoUrl\"] = \"Grab a photo link.\";\n        } else if (!this.validateUrl(this.state.userData.photoUrl)) {\n            this.setState({ photoUrlError:true })\n            formIsValid = false;\n            errors[\"photoUrl\"] = \"The link added is broken.\";\n        } \n\n        this.setState({errors: errors});\n        return formIsValid;\n    }\n\n    //set the state of the form variables to be set\n    handleChange = (e) => {\n        const targetName = e.target.name;\n        const targetValue = e.target.value;\n        \n        this.setState(\n            (prevState) => {\n                return {\n                    userData: {\n                    ...prevState.userData,\n                    [targetName]: targetValue\n                    }\n                }\n            }\n        )\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let dataFinal = this.state.userData;\n        const isValid = this.handleValidation();\n        if (isValid) {\n            axios.post('http://localhost:3001/team', { dataFinal },\n                {headers: {\"Content-Type\": 'application/json'}})\n                .then(res => {\n                    console.log(res.status);\n                    let status = res.status;\n                    if (status === 200){\n                        window.location = \"/\"; //This line of code will reload the page you once the submission is succeed\n                        alert(\"Successfully added your info.\");\n                    } else {\n                        alert(\"Failed to submit form. Try again.\");\n                    }\n                })\n        } else {\n              return;\n        }\n    }\n\n    render(){\n        return(\n            <form className=\"joinForm\" onSubmit={this.handleSubmit}>\n                <div className=\"form-body\" >\n                    <div className=\"form-field\">\n                        <label htmlFor=\"firstName\">First Name: </label>\n                        <input type=\"text\" title=\"add first name\" name=\"firstName\" onChange={this.handleChange.bind(this)} value={this.state.userData.firstName} autoComplete=\"off\"/>\n                        {this.state.errors[\"firstName\"] ? <span style={{color: \"red\"}}>{this.state.errors[\"firstName\"]}</span> : null} \n                    </div>\n                    <div className=\"form-field\">\n                        <label htmlFor=\"lastName\">Last Name: </label>\n                        <input type=\"text\"title=\"add last name\"  name=\"lastName\" onChange={this.handleChange.bind(this)} value={this.state.userData.lastName} autoComplete=\"off\"/>\n                        {this.state.errors[\"lastName\"] ? <span style={{color: \"red\"}}>{this.state.errors[\"lastName\"]}</span> : null} \n                    </div>\n                    <div className=\"form-field\">\n                        <label htmlFor=\"title\">Title: </label>\n                        <input type=\"text\"title=\"add title\"  name=\"title\" onChange={this.handleChange.bind(this)} value={this.state.userData.title} autoComplete=\"off\"/>\n                        {this.state.errors[\"title\"] ? <span style={{color: \"red\"}}>{this.state.errors[\"title\"]}</span> : null} \n                    </div>\n                    <div className=\"form-field\">\n                        <label htmlFor=\"story\">About you: </label>\n                        <textarea type=\"text\" name=\"story\" rows=\"4\" cols=\"50\" onChange={this.handleChange.bind(this)} value={this.state.userData.story}></textarea>\n                        {this.state.errors[\"story\"] ? <span style={{color: \"red\"}}>{this.state.errors[\"story\"]}</span> : null} \n                    </div>\n                    <div className=\"form-field\" ref={node => this.node = node}>\n                        <label htmlFor=\"favoriteColor\">Choose a favorite color: </label>\n                        <input readOnly onClick={this.showColorPicker} type=\"text\" name=\"favoriteColor\" value={this.state.userData.favoriteColor} autoComplete=\"off\" placeholder=\"Click here to choose a color.\" />\n                         <SwatchesPicker className={this.state.showPicker ? \"display-block\" : \"display-none\"} \n                                         onChangeComplete={this.handleChangeComplete} />\n                         {this.state.errors[\"favoriteColor\"] ? <span style={{color: \"red\"}}>{this.state.errors[\"favoriteColor\"]}</span> : null} \n                    </div>\n                    <div className=\"form-field\">\n                        <label htmlFor=\"photoUrl\">Link to your photo: </label>\n                        <input type=\"url\" name=\"photoUrl\"  autoComplete=\"off\" onChange={this.handleChange.bind(this)} value={this.state.userData.photoUrl}/>\n                        {this.state.errors[\"photoUrl\"] ? <span style={{color: \"red\"}}>{this.state.errors[\"photoUrl\"]}</span> : null} \n                    </div>\n                </div>\n                <button className=\"submit-btn\" type=\"Submit\">Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default JoinForm;\n\n","\nimport React from 'react';\nimport './Modal.css';\nimport JoinForm from '../JoinForm/JoinForm';\n\nfunction Modal(props) {\n    const { show, handleClose } = props;\n\n    const closeForm = show ? \"modal display-block\" : \"modal display-none\";\n    return(\n        <div className={closeForm}>\n            <div className=\"form-container\">\n                <div className=\"form-header\">\n                    <h2 className=\"title\">Join the Team</h2>\n                    <p>Fill out this form with information about you and then press Submit when you're done to add your info the team page.</p>\n                    <button className=\"close-btn\" type=\"button\" onClick={handleClose} title=\"Close form\">x</button>\n                </div>\n                <JoinForm handleClose={handleClose} />\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TeamMember.css';\nimport MatterEmptyAvatar from '../../assets/matter_empty_avatar.svg';\nimport Modal from '../Modal/Modal';\n\nclass TeamMember extends React.PureComponent {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    photoUrl: PropTypes.string,\n    story: PropTypes.string,\n    favoriteColor: PropTypes.string\n  };\n\n  static defaultProps = {\n    photoUrl: MatterEmptyAvatar,\n    story: null,\n    favoriteColor: '#3466F2',\n  };\n\n  constructor(props){\n    super(props);\n    this.showForm = this.showForm.bind(this);\n    this.state = { showJoinForm: false };\n  }\n\n  showForm(){\n    this.setState({showJoinForm: true})\n  }\n\n  hideForm = () => {\n    this.setState({showJoinForm: false});\n  }\n\n  render() {\n    let title = this.props.title;\n    let button;\n    if (title ===\"New Teammate\"){\n      button = <button className=\"join-btn\" onClick={this.showForm}>Join the team!</button>\n    }\n    let modal = <Modal show={this.state.showJoinForm} handleClose={this.hideForm} />\n\n    return (\n      <div className=\"container\">\n        <header>\n          <div className=\"avatar-container\">\n            <img\n              className=\"avatar\"\n              src={this.props.photoUrl}\n              alt={this.props.name}\n            />\n          </div>\n          <h2 className=\"title\">{this.props.title}</h2>\n          <h1 className=\"name\">{this.props.name}</h1>\n          {button}\n        </header>\n        <div className=\"body\"><p>{this.props.story}</p></div>\n        <footer style={{ backgroundColor: this.props.favoriteColor }}>\n          <div className=\"full-width-flex-box\">\n            <div className=\"one-third-flex-box stat\">9.0</div>\n            <div className=\"one-third-flex-box stat bordered\">9.0</div>\n            <div className=\"one-third-flex-box stat\">9.0</div>\n          </div>\n          <div className=\"full-width-flex-box\">\n            <div className=\"one-third-flex-box\">CANDID</div>\n            <div className=\"one-third-flex-box\">LEARNING</div>\n            <div className=\"one-third-flex-box\">GRIT</div>\n          </div>\n        </footer>\n        {modal}\n      </div>\n    );\n  }\n}\n\nexport default TeamMember;\n\n","import React from 'react';\nimport axios from 'axios';\nimport TeamMember from '../TeamMember';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      team: [],\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      await this.fetchInitialData();\n    } catch (error) {\n      // try again after half a second if fails due to race condition\n      console.log('retrying initial data request...');\n      setTimeout(async () => {\n        await this.fetchInitialData();\n      }, 500);\n    }\n  }\n\n  async fetchInitialData() {\n    const response = await axios.get('/team');\n    this.setState({\n      team: response.data,\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <h1>Loading...</h1>;\n    }\n\n    return (\n      <div className=\"app\">\n        <div className=\"team-grid\" />\n        {this.state.team.map(member => (\n          <TeamMember\n            key={member.id}\n            name={`${member.firstName} ${member.lastName}`}\n            title={member.title}\n            photoUrl={member.photoUrl}\n            story={member.story}\n            favoriteColor={member.favoriteColor}\n          />\n        ))}\n        {/* Make this new team member link to your form! */}\n        <TeamMember id=\"new\" name=\"Join us!\" title=\"New Teammate\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}